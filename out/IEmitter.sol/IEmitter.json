{"abi":[{"type":"function","name":"emitBuy","inputs":[{"name":"amountMinted","type":"uint256","internalType":"uint256"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"emitSell","inputs":[{"name":"amountSold","type":"uint256","internalType":"uint256"},{"name":"valueReceived","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"emitBuy(uint256,uint256)":"cee1fc6c","emitSell(uint256,uint256)":"b9040c40"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"emitBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueReceived\",\"type\":\"uint256\"}],\"name\":\"emitSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"fps (@0xfps).\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IEmitter.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"An interface that permits any BayviewContinuousToken contract deployed          by the BayviewContinuousTokenController to callback to the controller and emit          a buy or sell event if the transaction wasn't sent by the controller.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEmitter.sol\":\"IEmitter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@gelato/=lib/relay-context-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@pyth/=lib/pyth-sdk-solidity/\",\":@uniswap/=lib/v3-periphery/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\"]},\"sources\":{\"contracts/interfaces/IEmitter.sol\":{\"keccak256\":\"0x76b1aa30944f19e4de125cf0d30e565618996b4c8a11a540a914e1f09e1a4b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cab48f0729c756a4c475e2110451b05667edc1d5c2a7bf07ee05860f30b06d82\",\"dweb:/ipfs/QmULorw6hXYXCoRtR4ADrA8bUK9QGQh3wLjW9jrsQsyM3o\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"amountMinted","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"emitBuy"},{"inputs":[{"internalType":"uint256","name":"amountSold","type":"uint256"},{"internalType":"uint256","name":"valueReceived","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"emitSell"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@gelato/=lib/relay-context-contracts/","@openzeppelin/=lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@pyth/=lib/pyth-sdk-solidity/","@uniswap/=lib/v3-periphery/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","pyth-sdk-solidity/=lib/pyth-sdk-solidity/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/IEmitter.sol":"IEmitter"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/interfaces/IEmitter.sol":{"keccak256":"0x76b1aa30944f19e4de125cf0d30e565618996b4c8a11a540a914e1f09e1a4b50","urls":["bzz-raw://cab48f0729c756a4c475e2110451b05667edc1d5c2a7bf07ee05860f30b06d82","dweb:/ipfs/QmULorw6hXYXCoRtR4ADrA8bUK9QGQh3wLjW9jrsQsyM3o"],"license":"GPL-3.0"}},"version":1},"id":8}